# Loop Syntax

# ignore

// this is a comment
loop over operands -> operand {
    termination: operands empty;
    iteration: 
      do-something1-with (operand); // this is yet another comment
      do-something2-with (operand, "this is a string containing spaces");
  }

# unignore



<<
  * Loop :
      loop over ?SymbolListName -> ?SingleSymbolName {
          TerminationClause @Iteration @Clause
      }






  ---

  TerminationClause : "termination" ":" Clause ";"
  IterationClause :    "iteration" ":" Statement+

  Clause :
      | #nested "{" Statement* "}" Clause?
      | #other (~";" ~"{" ~"}" any)+  Clause?

  Statemement : Clause ";"

  SymbolListName = name
  SingleSymbolName = name

  ---

>>  #Lisp
    Loop : 
    TerminationClause:
    IterationClause:
    Clause #nested:
    Clause #other:
    Statement:

>>  #JavaScript
    Loop : 
    TerminationClause:
    IterationClause:
    Clause #nested:
    Clause #other:
    Statement:

  ---

  #separators ";" | ":" | "{" | "}" | "->" | ","
  
}
